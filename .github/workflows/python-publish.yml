name: Run tests and deploy to PyPI

on:
  push:
    branches:
      - main
      - preprocess_ai

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ankane/pgvector
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Uninstall global SimpleAI_Image if exists
      run: pip uninstall -y SimpleAI_Image || true

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas sqlalchemy pgvector matplotlib tensorflow scikit-learn openai

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Set TEST_DB_URL environment variable
      run: echo "TEST_DB_URL=postgresql://testuser:testpassword@localhost:5432/testdb" >> $GITHUB_ENV

    - name: Run tests
      run: python -m unittest discover -s preprocess_ai/tests -p "Test*.py"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine numpy pandas sqlalchemy pgvector matplotlib tensorflow scikit-learn openai

    - name: Build package
      run: python setup.py sdist bdist_wheel

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
